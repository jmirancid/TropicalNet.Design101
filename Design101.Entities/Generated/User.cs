//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Xml.Serialization;


namespace Design101.Entities
{
    [Serializable]
    public partial class User
    {
        #region Primitive Properties
    
        public virtual int UserId
        {
            get;
            set;
        }
    
        public virtual int RoleId
        {
            get { return _roleId; }
            set
            {
                if (_roleId != value)
                {
                    if (Role != null && Role.RoleId != value)
                    {
                        Role = null;
                    }
                    _roleId = value;
                }
            }
        }
        private int _roleId;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Phone
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string Login
        {
            get;
            set;
        }
    
        public virtual string Password
        {
            get;
            set;
        }
    
        public virtual bool Enabled
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
    	//[XmlElement("Documents", typeof(Collection<Document>))]
        public virtual ICollection<Document> Documents
        {
            get
            {
                if (_documents == null)
                {
                    var newCollection = new FixupCollection<Document>();
                    newCollection.CollectionChanged += FixupDocuments;
                    _documents = newCollection;
                }
                return _documents;
            }
            set
            {
                if (!ReferenceEquals(_documents, value))
                {
                    var previousValue = _documents as FixupCollection<Document>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupDocuments;
                    }
                    _documents = value;
                    var newValue = value as FixupCollection<Document>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupDocuments;
                    }
                }
            }
        }
    	//[XmlElement("Documents", typeof(Collection<Document>))]
        private ICollection<Document> _documents;
    
        public virtual Role Role
        {
            get { return _role; }
            set
            {
                if (!ReferenceEquals(_role, value))
                {
                    var previousValue = _role;
                    _role = value;
                    FixupRole(previousValue);
                }
            }
        }
        private Role _role;

        #endregion
        #region Association Fixup
    
        private void FixupRole(Role previousValue)
        {
            if (previousValue != null && previousValue.Users.Contains(this))
            {
                previousValue.Users.Remove(this);
            }
    
            if (Role != null)
            {
                if (!Role.Users.Contains(this))
                {
                    Role.Users.Add(this);
                }
                if (RoleId != Role.RoleId)
                {
                    RoleId = Role.RoleId;
                }
            }
        }
    
        private void FixupDocuments(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Document item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Document item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }

        #endregion
    }
}
